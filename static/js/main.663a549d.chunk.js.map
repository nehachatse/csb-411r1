{"version":3,"sources":["Part1/Redux/actionType.js","Part1/Redux/reducer.js","Part2/Redux/actionType.js","Part1/Redux/store.js","Part2/Redux/AppContextProvider.jsx","Part1/component/Counter.jsx","Part2/Redux/action.js","Part2/Components/TodoInput.jsx","Part2/Components/TodoItems.jsx","Part2/Components/Todo.jsx","App.js","Part2/Redux/reducer.js","Part2/Redux/store.js","index.js"],"names":["ADD_COUNTER","REDUCE_COUNTER","initState","counter","ADD_TODO","createStore","state","type","payload","console","log","TOGGLE_TODO","AppContext","React","createContext","AppContextProvider","children","store","value","dispatch","getState","useState","setState","subscribe","prev","Provider","Counter","useContext","onClick","TodoInput","setValue","placeholder","onChange","e","target","handleInput","title","status","TodoItems","task","handleToggle","toggleTodo","style","display","justifyContent","margin","marginRight","Todo","data","todo","map","item","index","App","className","marginTop","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.663a549d.chunk.js","sourcesContent":["export const ADD_COUNTER = \"ADD_COUNTER\";\r\nexport const REDUCE_COUNTER = \"REDUCE_COUNTER\";\r\n","//reducer takes 2 param i.e state and action\r\n\r\nimport { ADD_COUNTER, REDUCE_COUNTER } from \"./actionType\";\r\n\r\nconst initState = {\r\n  counter: 1\r\n};\r\nconst reducer = (state = initState, { type, payload }) => {\r\n  console.log(state);\r\n  switch (type) {\r\n    case ADD_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: state.counter + payload\r\n      };\r\n\r\n    case REDUCE_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: state.counter - payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { reducer };\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const ADD_COUNTER = \"ADD_COUNTER\";\r\nexport const REDUCE_COUNTER = \"REDUCE_COUNTER\";\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport const store = createStore(reducer);\r\n","import React from \"react\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport function AppContextProvider({ children, store }) {\r\n  const { dispatch, getState } = store;\r\n  const value = { dispatch, getState };\r\n  const [state, setState] = React.useState(0);\r\n\r\n  const forceUpdate = () => setState((prev) => prev + 1);\r\n  store.subscribe(forceUpdate);\r\n\r\n  return <AppContext.Provider value={value}> {children} </AppContext.Provider>;\r\n}\r\n","import { store } from \"../Redux/store\";\r\nimport { addCounter, reduceCounter } from \"../../Part2/Redux/action\";\r\nimport React, { useState } from \"react\";\r\nimport { AppContext } from \"../../Part2/Redux/AppContextProvider\";\r\n\r\nexport default function Counter() {\r\n  const { dispatch, getState } = React.useContext(AppContext);\r\n  const { counter } = getState();\r\n\r\n  const handleAdd = () => {\r\n    dispatch(addCounter(1));\r\n  };\r\n  const handleReduce = () => {\r\n    dispatch(reduceCounter(1));\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Counter: {counter}</h1>\r\n      <button onClick={handleAdd}>ADD</button>\r\n      <button onClick={handleReduce}>REDUCE</button>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  ADD_COUNTER,\r\n  REDUCE_COUNTER\r\n} from \"./actionType\";\r\n\r\nexport const addTodo = (payload) => ({\r\n  type: ADD_TODO,\r\n  payload: {\r\n    title: payload,\r\n    status: false\r\n  }\r\n});\r\n\r\nexport const toggleTodo = (payload) => ({\r\n  type: TOGGLE_TODO,\r\n  payload\r\n});\r\n\r\nexport const addCounter = (payload) => {\r\n  return {\r\n    type: ADD_COUNTER,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const reduceCounter = (payload) => {\r\n  return {\r\n    type: REDUCE_COUNTER,\r\n    payload\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { addTodo } from \"../Redux/action\";\r\nimport { AppContext } from \"../Redux/AppContextProvider\";\r\n\r\nexport default function TodoInput() {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const { dispatch, getState } = React.useContext(AppContext);\r\n\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"todo\", getState(), value);\r\n    dispatch(addTodo(value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter today's task\"\r\n        value={value}\r\n        onChange={(e) => handleInput(e)}\r\n      />\r\n      <button onClick={handleSubmit}>Add Todo</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toggleTodo } from \"../Redux/action\";\r\nimport { AppContext } from \"../Redux/AppContextProvider\";\r\n\r\nexport default function TodoItems({ task }) {\r\n  const { dispatch, getState } = React.useContext(AppContext);\r\n\r\n  const handleToggle = (payload) => {\r\n    dispatch(toggleTodo(payload));\r\n  };\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"1rem\" }}>\r\n      <h3 style={{ marginRight: \"1rem\" }}>{task.title} </h3>\r\n      <p style={{ marginRight: \"1rem\" }}>\r\n        (Status:{task.status ? \" true\" : \"false\"})\r\n      </p>\r\n      <button onClick={() => handleToggle(task.title)}>Toggle</button>\r\n    </div>\r\n  );\r\n}\r\n","import TodoInput from \"./TodoInput\";\r\nimport { AppContext } from \"../Redux/AppContextProvider\";\r\nimport React from \"react\";\r\nimport TodoItems from \"./TodoItems\";\r\n\r\nexport default function Todo() {\r\n  const { dispatch, getState } = React.useContext(AppContext);\r\n\r\n  const data = getState().todo;\r\n\r\n  return (\r\n    <>\r\n      <TodoInput />\r\n      {data.map((item, index) => (\r\n        <TodoItems task={item} key={index} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport Counter from \"./Part1/component/Counter\";\nimport Todo from \"./Part2/Components/Todo\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n      <div style={{ marginTop: \"2rem\" }}>\n        <h1>TODO</h1>\n        <Todo />\n      </div>\n    </div>\n  );\n}\n","import {\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  ADD_COUNTER,\r\n  REDUCE_COUNTER\r\n} from \"./actionType\";\r\n\r\nconst initState = {\r\n  todo: [],\r\n  counter: 1\r\n};\r\n\r\nexport const reducer = (state = initState, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todo: [...state.todo, payload]\r\n      };\r\n\r\n    case TOGGLE_TODO:\r\n      return {\r\n        ...state,\r\n        todo: state.todo.map((item) =>\r\n          item.title === payload ? { ...item, status: !item.status } : item\r\n        )\r\n      };\r\n\r\n    case ADD_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: state.counter + payload\r\n      };\r\n\r\n    case REDUCE_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: state.counter - payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport const store = createStore(reducer);\r\n\r\n// class Store {\r\n//   constructor(reducer, initState) {\r\n//     this.reducer = reducer;\r\n//     this.state = initState;\r\n//   }\r\n\r\n//   getState() {\r\n//     return this.state;\r\n//   }\r\n\r\n//   dispatch(action) {\r\n//     this.state = this.reducer(this.state, action);\r\n//   }\r\n// }\r\n\r\n// var store = new Store(reducer, initState);\r\n\r\n// console.log(store.getState);\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import { store } from \"./Part1/Redux/store\";\n// import { AppContextProvider } from \"./Part1/Redux/AppContextProvider\";\nimport { AppContextProvider } from \"./Part2/Redux/AppContextProvider\";\nimport { store } from \"./Part2/Redux/store\";\n\nconsole.log(store.getState());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <AppContextProvider store={store}>\n      <App />\n    </AppContextProvider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}